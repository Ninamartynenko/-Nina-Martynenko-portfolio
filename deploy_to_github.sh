#!/usr/bin/env bash

# -----------------------------------------------
# –°–∫—Ä–∏–ø—Ç: deploy_to_github.sh
# –ü—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ Git, –∑–∞–∫–∏–¥–∞—Ç–∏ –∫–æ–¥ —Å–∞–π—Ç—É –Ω–∞ GitHub
# –ü–µ—Ä–µ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º:
#  1. –ó–∞–º—ñ–Ω—ñ—Ç—å GITHUB_USERNAME —ñ REPO_NAME –Ω–∞ —Å–≤–æ—ó –∑–Ω–∞—á–µ–Ω–Ω—è.
#  2. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –Ω–∞ GitHub –≤–∂–µ —î —Å—Ç–≤–æ—Ä–µ–Ω–µ –ø—É—Å—Ç–µ —Ä–µ–ø–æ https://github.com/GITHUB_USERNAME/REPO_NAME
#  3. –ü–æ–º—ñ—Å—Ç—ñ—Ç—å —Ü–µ–π —Å–∫—Ä–∏–ø—Ç —É –∫–æ—Ä—ñ–Ω—å –ø—Ä–æ—î–∫—Ç—É (–¥–µ –ª–µ–∂–∞—Ç—å index.html, about.html —Ç–æ—â–æ).
#  4. –ó—Ä–æ–±—ñ—Ç—å —Å–∫—Ä–∏–ø—Ç –≤–∏–∫–æ–Ω—É–≤–∞–Ω–∏–º: chmod +x deploy_to_github.sh
#  5. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: ./deploy_to_github.sh
# -----------------------------------------------

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è (–∑–º—ñ–Ω—ñ—Ç—å —Å–≤–æ—ó –¥–∞–Ω—ñ) ===
GITHUB_USERNAME="Ninamartynenko"         # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, nina-martynenko
REPO_NAME="-Nina-Martynenko-portfolio"           # –ù–∞–∑–≤–∞ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é –Ω–∞ GitHub
BRANCH="main"                      # –ì—ñ–ª–∫–∞, —è–∫—É –±—É–¥–µ–º–æ –ø—É—à–∏—Ç–∏ (–º–æ–∂–µ –±—É—Ç–∏ "main" –∞–±–æ "master")

# -----------------------------------------------
# –ö—Ä–æ–∫ 1: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ —î –ø–æ—Ç–æ—á–Ω–∞ –ø–∞–ø–∫–∞ Git-—Ä–µ–ø–æ
if [ -d ".git" ]; then
  echo "‚úî –£ —Ü—å–æ–º—É –∫–∞—Ç–∞–ª–æ–∑—ñ –≤–∂–µ —ñ—Å–Ω—É—î –ø–∞–ø–∫–∞ .git, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ git init."
else
  # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –Ω–æ–≤–∏–π Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π
  git init
  echo "‚úî –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –Ω–æ–≤–∏–π Git-—Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π."
fi

# -----------------------------------------------
# –ö—Ä–æ–∫ 2: –î–æ–¥–∞—î–º–æ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π origin (—è–∫—â–æ –π–æ–≥–æ —â–µ –Ω–µ –¥–æ–¥–∞–Ω–æ)
REMOTE_URL="https://github.com/${GITHUB_USERNAME}/${REPO_NAME}.git"
EXISTING_REMOTE=$(git remote 2>/dev/null)

if echo "$EXISTING_REMOTE" | grep -q "origin"; then
  echo "‚úî –í—ñ–¥–¥–∞–ª–µ–Ω–∏–π 'origin' –≤–∂–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π: $(git remote get-url origin)"
else
  git remote add origin "$REMOTE_URL"
  echo "‚úî –î–æ–¥–∞–Ω–æ –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π origin ‚Üí $REMOTE_URL"
fi

# -----------------------------------------------
# –ö—Ä–æ–∫ 3: –°—Ç–≤–æ—Ä—é—î–º–æ .gitignore (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
# –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —ñ–≥–Ω–æ—Ä—É—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤—ñ —Ñ–∞–π–ª–∏ OS —á–∏ IDE:
cat > .gitignore <<EOF
# HTTP caching
*.html~

# Node.js / VSCode / Mac OS / Windows / —ñ–Ω—à—ñ —Ç–∏–º—á–∞—Å–æ–≤—ñ
node_modules/
.vscode/
.DS_Store
Thumbs.db
*.log
EOF

echo "‚úî –°—Ç–≤–æ—Ä–µ–Ω–æ –±–∞–∑–æ–≤–∏–π .gitignore (–ø—ñ–¥–ª–∞—à—Ç—É–π—Ç–µ –∑–∞ –ø–æ—Ç—Ä–µ–±–æ—é)."

# -----------------------------------------------
# –ö—Ä–æ–∫ 4: –î–æ–¥–∞—î–º–æ –≤—Å—ñ —Ñ–∞–π–ª–∏ —Ç–∞ –ø–µ—Ä—à–∏–π –∫–æ–º—ñ—Ç
git add .
git commit -m "Initial commit: add portfolio files"

echo "‚úî –ó—Ä–æ–±–ª–µ–Ω–æ –ø–µ—Ä—à–∏–π –∫–æ–º—ñ—Ç —ñ–∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è–º 'Initial commit: add portfolio files'."

# -----------------------------------------------
# –ö—Ä–æ–∫ 5: –ü–µ—Ä–µ–π–º–µ–Ω–æ–≤—É—î–º–æ –≥—ñ–ª–∫—É (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ) —ñ –ø—É—à–∏–º–æ —É –≤—ñ–¥–¥–∞–ª–µ–Ω–∏–π —Ä–µ–ø–æ
#        –Ø–∫—â–æ —É –≤–∞—Å —É–∂–µ —î –≥—ñ–ª–∫–∞ main, —ñ –≤–∏ —Ö–æ—á–µ—Ç–µ –ª–∏—à–∏—Ç–∏ master ‚Äî –∑–º—ñ–Ω—ñ—Ç—å BRANCH –Ω–∞ master.
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [ "$CURRENT_BRANCH" != "$BRANCH" ]; then
  git branch -M "$BRANCH"
  echo "‚úî –ü–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω–æ –≥—ñ–ª–∫—É '$CURRENT_BRANCH' ‚Üí '$BRANCH'."
fi

git push -u origin "$BRANCH"

if [ $? -eq 0 ]; then
  echo "‚úî –£—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—à–µ–Ω–æ –Ω–∞ GitHub —É –≥—ñ–ª–∫—É '$BRANCH'."
else
  echo "‚úñ –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ø—É—à—É. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å URL —Ç–∞ –≤–∞—à—ñ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É."
  exit 1
fi

# -----------------------------------------------
# –ö—Ä–æ–∫ 6: –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è GitHub Pages (—á–µ—Ä–µ–∑ API)
# –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –≤–º–∏–∫–∞–Ω–Ω—è GitHub Pages –º–æ–∂–Ω–∞ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è GitHub CLI (gh) –∞–±–æ GitHub API.
# –ù–∏–∂—á–µ –ø—Ä–∏–∫–ª–∞–¥ —ñ–∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º GitHub CLI (—è–∫—â–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ gh).
# –Ø–∫—â–æ –≤–∏ –Ω–µ –º–∞—î—Ç–µ GitHub CLI, —Ü—é —á–∞—Å—Ç–∏–Ω—É –º–æ–∂–Ω–∞ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–∏ —Ç–∞ –≤–∫–ª—é—á–∏—Ç–∏ Pages –≤—Ä—É—á–Ω—É –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é.

if command -v gh >/dev/null 2>&1; then
  echo "‚Ñπ GitHub CLI (gh) –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äì –Ω–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ GitHub Pages –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ..."
  # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Å GitHub Pages (–≥—ñ–ª–∫–∞: BRANCH, –ø–∞–ø–∫–∞: /root)
  gh repo edit "${GITHUB_USERNAME}/${REPO_NAME}" --enable-pages
  gh api     -X PUT     -H "Accept: application/vnd.github.v3+json"     /repos/"${GITHUB_USERNAME}"/"${REPO_NAME}"/pages     -f source="{'branch':'$BRANCH','path':'/'}"
  if [ $? -eq 0 ]; then
    echo "‚úî GitHub Pages —É–≤—ñ–º–∫–Ω–µ–Ω–æ."
  else
    echo "‚úñ –ù–µ –≤–¥–∞–ª–æ—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —É–≤—ñ–º–∫–Ω—É—Ç–∏ GitHub Pages. –ù–∞–ª–∞—à—Ç—É–π—Ç–µ –≤—Ä—É—á–Ω—É —É Settings ‚Üí Pages."
  fi
else
  echo "‚Ñπ GitHub CLI (gh) –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ ‚Äì —Ç—Ä—ñ—à–∫–∏ –ø—ñ–¥–∫–∞–∂–µ–º–æ, —è–∫ —É–≤—ñ–º–∫–Ω—É—Ç–∏ Pages –≤—Ä—É—á–Ω—É:"
  echo "  1) –ó–∞–π–¥—ñ—Ç—å —É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π –Ω–∞ GitHub."
  echo "  2) –ü–µ—Ä–µ–π–¥—ñ—Ç—å —É Settings ‚Üí Pages."
  echo "  3) –í —Ä–æ–∑–¥—ñ–ª—ñ 'Source' –≤–∏–±–µ—Ä—ñ—Ç—å –≥—ñ–ª–∫—É: $BRANCH, –ø–∞–ø–∫—É: '/' —ñ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å 'Save'."
  echo "  4) –ß–µ—Ä–µ–∑ —Ö–≤–∏–ª–∏–Ω—É –≤–∞—à —Å–∞–π—Ç –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π –∑–∞ URL: https://${GITHUB_USERNAME}.github.io/${REPO_NAME}/"
fi

# -----------------------------------------------
echo "=============================="
echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "–ü–µ—Ä–µ–π–¥—ñ—Ç—å –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º: https://${GITHUB_USERNAME}.github.io/${REPO_NAME}/"
echo "=============================="
